Write a program that reads a number from the user and divides it by another number entered by the user.  Wrap the division operation in a try-catch block to handle a potential ArithmeticException if the user enters 0 for the divisor. In the catch block, print an appropriate error message.
Write a program that prompts the user to enter an integer. Wrap the conversion from String to integer in a try-catch block to handle a potential NumberFormatException if the user enters a non-numeric value. In the catch block, print an appropriate error message and ask the user to enter a valid integer.
Write a program that simulates a login system. The program prompts the user for a username and password.  Wrap the code that checks the credentials in a try-catch block. In the catch block, handle any IndexOutOfBoundsException that might occur if the username or password entered is too short.
Create a calculator program that performs various types of arithmetic operations. Also create a program that can divide any number by any number. Make sure you add exception handling to capture and notify users in case they use unpermitted operations, such as dividing a number by 0. Make sure your program has all the features of a normal calculator.
Design a program that uses multiple nested try-catch blocks. Simulate a scenario where an exception occurs within a deeper nested try block. Ensure the program catches and handles the exception appropriately using outer catch blocks.
